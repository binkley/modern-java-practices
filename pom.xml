<?xml version="1.0"?>
<project
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
        http://maven.apache.org/xsd/maven-4.0.0.xsd"
        xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <groupId>demo</groupId>
    <artifactId>modern-java-practices</artifactId>
    <version>0-SNAPSHOT</version>

    <name>Modern Java/JVM build practices</name>
    <description>
        Advice on Modern Java/JVM Gradle and Maven builds.
        The advice is language-agnostic, but options are often specific for
        Java (such as plugins that review Java code quality).
        The goal: Make you build AWESOME, and help you with solid CI builds.
    </description>
    <url>https://github.com/binkley/modern-java-practices</url>
    <licenses>
        <license>
            <name>CC0</name>
            <url>https://creativecommons.org/public-domain/cc0/</url>
            <distribution>repo</distribution>
            <comments>
                A "No Rights Reserved" license suitable in most jurisdictions
                without waiting for expiration of rights under Public Domain.
            </comments>
        </license>
    </licenses>
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/binkley/modern-java-practices/issues</url>
    </issueManagement>
    <ciManagement>
        <system>GitHub</system>
        <url>https://github.com/binkley/modern-java-practices/actions</url>
    </ciManagement>

    <scm>
        <connection>scm:git:git://github.com/binkley/modern-java-practices
        </connection>
        <url>https://github.com/binkley/modern-java-practices</url>
    </scm>

    <packaging>jar</packaging>

    <developers>
        <developer>
            <id>binkley</id>
            <name>Brian Oxley</name>
            <email>binkley@alumni.rice.edu</email>
            <roles>
                <role>owner</role>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>America/Chicago</timezone>
        </developer>
        <developer>
            <id>jwlibby</id>
            <name>John Libby</name>
            <email>jwlibby@gmail.com</email>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>America/Los_Angeles</timezone>
        </developer>
    </developers>

    <properties>
        <!-- @formatter:off -->
        <assertj.version>3.26.3</assertj.version>
        <buildplan-maven-plugin.version>1.5</buildplan-maven-plugin.version>
        <checkstyle.version>10.18.1</checkstyle.version>
        <coverage.branches>100</coverage.branches>
        <coverage.instructions>100</coverage.instructions>
        <coverage.lines>100</coverage.lines>
        <dependency-check-maven.version>10.0.4</dependency-check-maven.version>
        <findbugs-annotations.version>3.0.1</findbugs-annotations.version>
        <findsecbugs-plugin.version>1.13.0</findsecbugs-plugin.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <java.charset>UTF-8</java.charset>
        <jdk.version>21</jdk.version>
        <junit.version>5.11.0</junit.version>
        <lombok.version>1.18.34</lombok.version>
        <main.class>demo.Application</main.class>
        <maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
        <maven-changelog-plugin.version>2.3</maven-changelog-plugin.version>
        <maven-checkstyle-plugin.version>3.5.0</maven-checkstyle-plugin.version>
        <maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.8.0</maven-dependency-plugin.version>
        <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
        <maven-javadoc-plugin.version>3.10.0</maven-javadoc-plugin.version>
        <maven-jdeps-plugin.version>3.1.2</maven-jdeps-plugin.version>
        <maven-pmd-plugin.version>3.25.0</maven-pmd-plugin.version>
        <maven-profiler-report-directory>${project.build.directory}</maven-profiler-report-directory>
        <maven-testing-plugins.version>3.5.0</maven-testing-plugins.version>
        <maven-wrapper-plugin.version>3.3.2</maven-wrapper-plugin.version>
        <maven.version>3.9.9</maven.version>
        <mockito.version>5.13.0</mockito.version>
        <modernizer.version>2.9.0</modernizer.version>
        <owasp.nvdApiKey>${env.OWASP_NVD_API_KEY}</owasp.nvdApiKey>
        <owasp.skip>false</owasp.skip>
        <!-- Only needed for the Palantir style of Java code
        <palantir-java-format.version>2.39.0</palantir-java-format.version>
        -->
        <pitest-junit5-plugin.version>1.2.1</pitest-junit5-plugin.version>
        <pitest-maven.version>1.17.0</pitest-maven.version>
        <pitest.skip>false</pitest.skip>
        <pmd.version>7.5.0</pmd.version>
        <project.build.sourceEncoding>${java.charset}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${java.charset}</project.reporting.outputEncoding>
        <spotbugs-maven-plugin.version>4.8.6.4</spotbugs-maven-plugin.version>
        <spotbugs.version>4.8.6</spotbugs.version>
        <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>
        <taglist-maven-plugin.version>3.0.0</taglist-maven-plugin.version>
        <versions-maven-plugin.version>2.17.1</versions-maven-plugin.version>
        <spotless.check.skip>true</spotless.check.skip>
        <!-- @formatter:on -->
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- CVE-2021-44228: Log4j vulnerable to remote code
                execution -->
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>[2.16,)</version>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <version>${spotbugs.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>findbugs-annotations</artifactId>
            <version>${findbugs-annotations.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-wrapper-plugin</artifactId>
                <version>${maven-wrapper-plugin.version}</version>
                <configuration>
                    <distributionType>source</distributionType>
                    <mavenVersion>${maven.version}</mavenVersion>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <configuration>
                    <rules>
                        <dependencyConvergence/>
                        <!-- Keep Maven up to date -->
                        <requireMavenVersion>
                            <version>${maven.version}</version>
                        </requireMavenVersion>
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                    <ignoredVersions>.*[-.](BETA|beta).*</ignoredVersions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>fr.jcgay.maven.plugins</groupId>
                <artifactId>buildplan-maven-plugin</artifactId>
                <version>${buildplan-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-XDcompilePolicy=simple</arg>
                        <arg>-Xlint:all,-processing</arg>
                    </compilerArgs>
                    <failOnWarning>true</failOnWarning>
                    <parameters>true</parameters>
                    <release>${jdk.version}</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <configLocation>
                        config/checkstyle/checkstyle.xml
                        <!-- config/checkstyle/google_checks.xml    -->
                        <!-- config/checkstyle/sun_checks.xml    -->
                    </configLocation>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <includeTestSourceDirectory>true
                    </includeTestSourceDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>validate-checkstyle</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <printFailingErrors>true</printFailingErrors>
                    <targetJdk>${jdk.version}</targetJdk>
                    <includeTests>true</includeTests>
                    <rulesets>
                        <ruleset>config/pmd/custom-rules.xml</ruleset>
                    </rulesets>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                            <goal>cpd-check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-testing-plugins.version}</version>
                <configuration>
                    <!-- Quieter local builds when JUL is in use (you or
                         another library or tool)
                         TODO: Keep builds noisy in CI -->
                    <systemPropertyVariables>
                        <java.util.logging.config.file>
                            ${project.basedir}/config/logging.properties
                        </java.util.logging.config.file>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <rules>
                        <rule>
                            <limits>
                                <limit>
                                    <counter>LINE</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>${coverage.lines}%</minimum>
                                </limit>
                                <limit>
                                    <counter>BRANCH</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>${coverage.branches}%</minimum>
                                </limit>
                                <limit>
                                    <counter>INSTRUCTION</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>${coverage.instructions}%</minimum>
                                </limit>
                            </limits>
                        </rule>
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-coverage</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>coverage-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>check-coverage</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <configuration>
                    <effort>Max</effort>
                    <includeTests>true</includeTests>
                    <threshold>Low</threshold>

                    <htmlOutput>true</htmlOutput>
                    <sarifOutput>true</sarifOutput>
                    <xmlOutput>true</xmlOutput>

                    <plugins>
                        <plugin>
                            <groupId>com.h3xstream.findsecbugs</groupId>
                            <artifactId>findsecbugs-plugin</artifactId>
                            <version>${findsecbugs-plugin.version}</version>
                        </plugin>
                    </plugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>${spotbugs.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-plugin</artifactId>
                <version>${modernizer.version}</version>
                <configuration>
                    <javaVersion>${jdk.version}</javaVersion>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>modernizer</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>${pitest-maven.version}</version>
                <configuration>
                    <jvmArgs>
                        <jvmArg>-XX:TieredStopAtLevel=1</jvmArg>
                    </jvmArgs>
                    <mutationThreshold>100</mutationThreshold>
                    <skip>${pitest.skip}</skip>
                    <timestampedReports>false</timestampedReports>
                    <verbose>false</verbose> <!-- Set to true for noisy output -->
                    <verbosity>NO_SPINNER</verbosity> <!-- For CI -->
                    <withHistory>true</withHistory>
                </configuration>
                <executions>
                    <execution>
                        <id>mutation-testing</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>mutationCoverage</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <version>${pitest-junit5-plugin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <executions>
                    <execution>
                        <id>javadoc-jars</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal> <!-- Javadoc for "main" source code -->
                            <goal>test-jar</goal> <!-- Javadoc for "test" source code -->
                            <!-- More configuration needed for "integrationTest" source code -->
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jdeps-plugin</artifactId>
                <version>${maven-jdeps-plugin.version}</version>
                <configuration>
                    <multiRelease>${jdk.version}</multiRelease>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>jdkinternals</goal>
                            <goal>test-jdkinternals</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check-maven.version}</version>
                <configuration>
                    <!-- This is not dotnet code -->
                    <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                    <failBuildOnCVSS>0</failBuildOnCVSS>
                    <nvdApiKey>${owasp.nvdApiKey}</nvdApiKey>
                    <skip>${owasp.skip}</skip>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-testing-plugins.version}</version>
                <configuration>
                    <!-- Quieter local builds when JUL is in use (you or
                         another library or tool)
                         TODO: Keep builds noisy in CI -->
                    <systemPropertyVariables>
                        <java.util.logging.config.file>
                            ${project.basedir}/config/logging.properties
                        </java.util.logging.config.file>
                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <!-- @formatter:off -->
                            <Add-Opens>java.base/java.lang java.base/java.util java.base/java.lang.reflect</Add-Opens>
                            <!-- @formatter:on -->
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-core</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-java</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-javascript</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-jsp</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
