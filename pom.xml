<?xml version="1.0"?>
<project
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
        http://maven.apache.org/xsd/maven-4.0.0.xsd"
        xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <groupId>hm.binkley.md</groupId>
    <artifactId>modern-java-practice-maven</artifactId>
    <version>0-SNAPSHOT</version>

    <name>Modern Java/JVM build practices</name>
    <description>
        Advice on Modern Java/JVM Gradle and Maven builds
    </description>
    <url>https://github.com/binkley/modern-java-practices</url>
    <licenses>
        <license>
            <name>Public Domain</name>
            <url>https://unlicense.org/</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/binkley/modern-java-practices/issues</url>
    </issueManagement>
    <scm>
        <connection>scm:git:git://github.com/binkley/modern-java-practices
        </connection>
        <url>https://github.com/binkley/modern-java-practices</url>
    </scm>

    <properties>
        <!-- @formatter:off -->
        <assertj.version>3.19.0</assertj.version>
        <buildplan-maven-plugin.version>1.4</buildplan-maven-plugin.version>
        <checkstyle.version>8.39</checkstyle.version>
        <dependency-check-maven.version>6.1.0</dependency-check-maven.version>
        <findbugs-annotations.version>3.0.1</findbugs-annotations.version>
        <findsecbugs-plugin.version>1.11.0</findsecbugs-plugin.version>
        <jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
        <java.charset>UTF-8</java.charset>
        <jdk.version>11</jdk.version>
        <junit.version>5.7.1</junit.version>
        <lombok.version>1.18.18</lombok.version>
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
        <maven-pmd-plugin.version>3.14.0</maven-pmd-plugin.version>
        <maven-profiler-report-directory>${project.build.directory}/site</maven-profiler-report-directory>
        <maven-testing-plugins.version>3.0.0-M5</maven-testing-plugins.version>
        <maven.version>3.6.3</maven.version>
        <mockito.version>3.7.7</mockito.version>
        <pitest-junit5-plugin.version>0.12</pitest-junit5-plugin.version>
        <pitest-maven.version>1.6.2</pitest-maven.version>
        <pmd.version>6.30.0</pmd.version>
        <project.build.sourceEncoding>${java.charset}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${java.charset}</project.reporting.outputEncoding>
        <spotbugs-maven-plugin.version>4.2.0</spotbugs-maven-plugin.version>
        <spotbugs.version>4.2.1</spotbugs.version>
        <system-lambda.version>1.2.0</system-lambda.version>
        <versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>
        <!-- @formatter:on -->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <version>${spotbugs.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>findbugs-annotations</artifactId>
            <version>${findbugs-annotations.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.stefanbirkner</groupId>
            <artifactId>system-lambda</artifactId>
            <version>${system-lambda.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <configuration>
                    <rules>
                        <requireMavenVersion>
                            <version>${maven.version}</version>
                        </requireMavenVersion>
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>fr.jcgay.maven.plugins</groupId>
                <artifactId>buildplan-maven-plugin</artifactId>
                <version>${buildplan-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <compilerArgs>
                        <arg>-Xlint:all,-processing</arg>
                    </compilerArgs>
                    <failOnWarning>true</failOnWarning>
                    <parameters>true</parameters>
                    <release>${jdk.version}</release>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <configLocation>config/checkstyle/checkstyle.xml
                    </configLocation>
                    <consoleOutput>true</consoleOutput>
                    <encoding>UTF-8</encoding>
                    <failsOnError>true</failsOnError>
                    <includeTestSourceDirectory>true
                    </includeTestSourceDirectory>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <printFailingErrors>true</printFailingErrors>
                    <targetJdk>${jdk.version}</targetJdk>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                            <goal>cpd-check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>net.sourceforge.pmd</groupId>
                        <artifactId>pmd</artifactId>
                        <version>${pmd.version}</version>
                        <type>pom</type>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-testing-plugins.version}</version>
                <configuration>
                    <!-- Quieter local builds when JUL is in use (you or
                         another library or tool)
                         TODO: Keep builds noisy in CI -->
                    <systemProperties>
                        <property>
                            <name>java.util.logging.config.file</name>
                            <value>
                                ${project.basedir}/config/logging.properties
                            </value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>prepare-coverage</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>coverage-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>check-coverage</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <limits>
                                        <limit>
                                            <minimum>100%</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>${pitest-maven.version}</version>
                <configuration>
                    <!-- TODO: Teach pitest to ignore Lombok code -->
                    <coverageThreshold>75</coverageThreshold>
                    <jvmArgs>
                        <jvmArg>-XX:TieredStopAtLevel=1</jvmArg>
                    </jvmArgs>
                    <mutationThreshold>100</mutationThreshold>
                    <timestampedReports>false</timestampedReports>
                </configuration>
                <executions>
                    <execution>
                        <id>mutation-testing</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>mutationCoverage</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <version>${pitest-junit5-plugin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <configuration>
                    <plugins>
                        <plugin>
                            <groupId>com.h3xstream.findsecbugs</groupId>
                            <artifactId>findsecbugs-plugin</artifactId>
                            <version>${findsecbugs-plugin.version}</version>
                        </plugin>
                    </plugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>${spotbugs.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check-maven.version}</version>
                <configuration>
                    <failBuildOnAnyVulnerability>true
                    </failBuildOnAnyVulnerability>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-testing-plugins.version}</version>
                <configuration>
                    <!-- Quieter local builds when JUL is in use (you or
                         another library or tool)
                         TODO: Keep builds noisy in CI -->
                    <systemProperties>
                        <property>
                            <name>java.util.logging.config.file</name>
                            <value>
                                ${project.basedir}/config/logging.properties
                            </value>
                        </property>
                    </systemProperties>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
