containers:
  build-env:
    image: eclipse-temurin:21.0.1_12-jdk-jammy
    environment:
      # Needed for Gradle: Maven handles this via `.mvn/jvm.config`
      JAVA_OPTS: --add-opens java.base/java.lang=ALL-UNNAMED
    run_as_current_user:
      enabled: true
      home_directory: /home/container-user
    volumes:
      - local: .
        container: /code
        options: cached
      - local: ~/.gradle
        container: /home/container-user/.gradle
        options: cached
      - local: ~/.m2
        container: /home/container-user/.m2
        options: cached
    working_directory: /code

tasks:
  # NB -- local build need "clean", but CI (GitHub actions) does not:
  # Docker copies in the local repo clone, including any artifacts such as
  # build/ or target/ directories; CI starts from a fresh clone
  build-with-gradle:
    description: Build and test with Gradle
    run:
      container: build-env
      # One time only when updating to DependencyCheck plugin 7.0.0:
      # command: ./gradlew --no-daemon --warning-mode=all dependencyCheckPurge clean build
      command: ./gradlew --no-configuration-cache --no-daemon --warning-mode=all clean build
  run-with-gradle:
    description: Runs the demo program assuming a Gradle build
    run:
      container: build-env
      command: ./run-with-gradle.sh
  debug-with-gradle:
    description: Runs the demo program in the foreground assuming a Gradle build
    # -p 5005:5005 -e JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n"
    run:
      container: build-env
      # For a server program, set suspend=n; for command line, set suspend=y
      # The "server=y" means the program provides the 5005 port for the IDE
      command: ./run-with-gradle.sh --jvm-option="-Xdebug" --jvm-option="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005"
      ports:
        - local: 8080
          container: 8080
        - local: 5005
          container: 5005
  build-with-maven:
    description: Build and test with Maven
    run:
      container: build-env
      command: ./mvnw --no-transfer-progress clean verify site
  run-with-maven:
    description: Runs the demo program assuming a Maven build
    run:
      container: build-env
      command: ./run-with-maven.sh
  debug-with-maven:
    description: Runs the demo program in the foreground assuming a Maven build
# -p 5005:5005 -e JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n"
    run:
      container: build-env
      # For a server program, set suspend=n; for command line, set suspend=y
      # The "server=y" means the program provides the 5005 port for the IDE
      command: ./run-with-maven.sh --jvm-option="-Xdebug" --jvm-option="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005"
      ports:
        - local: 8080
          container: 8080
        - local: 5005
          container: 5005
  shell:
    description: Open a shell in the container
    run:
      container: build-env
      command: /bin/bash
